{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/maliksblr92/Desktop/development/clipbucket/react/src/App.js\";\nimport React from 'react';\nimport FileUploader from 'devextreme-react/file-uploader';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chunks: []\n    };\n    this.onUploadProgress = this.onUploadProgress.bind(this);\n    this.onUploadStarted = this.onUploadStarted.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FileUploader, {\n        name: \"file\",\n        accept: \"image/*\",\n        uploadUrl: \"https://js.devexpress.com/Demos/WidgetsGalleryDataService/api/ChunkUpload\",\n        chunkSize: 200000,\n        onUploadStarted: this.onUploadStarted,\n        onProgress: this.onUploadProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"note\",\n        children: [\"Allowed file extensions: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \".jpg, .jpeg, .gif, .png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 57\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"note\",\n        children: [\"Maximum file size: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"4 MB.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chunk-panel\",\n        children: this.state.chunks.map((c, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Chunk size:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"segment-size dx-theme-accent-as-text-color\",\n              children: this.getValueInKb(c.segmentSize)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \", Uploaded:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loaded-size dx-theme-accent-as-text-color\",\n              children: this.getValueInKb(c.bytesLoaded)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"total-size dx-theme-accent-as-text-color\",\n              children: this.getValueInKb(c.bytesTotal)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n  onUploadProgress(e) {\n    const chunk = {\n      segmentSize: e.segmentSize,\n      bytesLoaded: e.bytesLoaded,\n      bytesTotal: e.bytesTotal\n    };\n    this.setState({\n      chunks: [...this.state.chunks, chunk]\n    });\n  }\n\n  onUploadStarted() {\n    this.setState({\n      chunks: []\n    });\n  }\n\n  getValueInKb(value) {\n    return `${(value / 1024).toFixed(0)}kb`;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/maliksblr92/Desktop/development/clipbucket/react/src/App.js"],"names":["React","FileUploader","App","Component","constructor","props","state","chunks","onUploadProgress","bind","onUploadStarted","render","map","c","i","getValueInKb","segmentSize","bytesLoaded","bytesTotal","e","chunk","setState","value","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FileUploader from 'devextreme-react/file-uploader';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { chunks: [] };\n    this.onUploadProgress = this.onUploadProgress.bind(this);\n    this.onUploadStarted = this.onUploadStarted.bind(this);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <FileUploader name=\"file\" accept=\"image/*\" uploadUrl=\"https://js.devexpress.com/Demos/WidgetsGalleryDataService/api/ChunkUpload\"\n          chunkSize={200000} onUploadStarted={this.onUploadStarted} onProgress={this.onUploadProgress} />\n        <span className=\"note\">Allowed file extensions: <span>.jpg, .jpeg, .gif, .png</span>.</span>\n        <span className=\"note\">Maximum file size: <span>4 MB.</span></span>\n        <div className=\"chunk-panel\">\n          {\n            this.state.chunks.map((c, i) => {\n              return <div key={i}>\n                <span>Chunk size:</span>\n                <span className=\"segment-size dx-theme-accent-as-text-color\">{this.getValueInKb(c.segmentSize)}</span>\n                <span>, Uploaded:</span>\n                <span className=\"loaded-size dx-theme-accent-as-text-color\">{this.getValueInKb(c.bytesLoaded)}</span>\n                <span>/</span>\n                <span className=\"total-size dx-theme-accent-as-text-color\">{this.getValueInKb(c.bytesTotal)}</span>\n              </div>;\n            })\n          }\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  onUploadProgress(e) {\n    const chunk = {\n      segmentSize: e.segmentSize,\n      bytesLoaded: e.bytesLoaded,\n      bytesTotal: e.bytesTotal\n    };\n    this.setState({ chunks: [...this.state.chunks, chunk] });\n  }\n\n  onUploadStarted() {\n    this.setState({ chunks: [] });\n  }\n\n  getValueInKb(value) {\n    return `${(value / 1024).toFixed(0)}kb`;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}