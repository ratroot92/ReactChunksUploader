{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/react/react/src/App.js\";\nimport React, { Component } from 'react';\nimport FineUploaderTraditional from 'fine-uploader-wrappers';\nimport Gallery from 'react-fine-uploader'; // ...or load this specific CSS file using a <link> tag in your document\n\nimport 'react-fine-uploader/gallery/gallery.css';\nconst FileList = {\n  fileName: \"\",\n  chunkList: []\n};\nconst uploader = new FineUploaderTraditional({\n  options: {\n    callbacks: {\n      onAllComplete: function (id, name, response) {// console.log(\"allcomp\",name);\n        // console.log(\"allcomp\",id);\n        // console.log(\"allcomp\",response)\n      },\n      onComplete: function (id, name, response) {//    console.log(\"comp\",name);\n        //    console.log(\"comp\",id);\n        //    console.log(\"comp\",response)\n        //    fetch(`http://127.0.0.1/api/videos/processVideo?fileName=${response['fileName']}`).then((res)=>{\n        //        console.log(\"asd\");\n        //    }).catch((err)=>{\n        //        console.log(\"ERROR\")\n        //    })\n      },\n      onUploadChunkSuccess: function (id, name, response) {\n        // console.log(\"___\",name);\n        // console.log(\"___\",id);\n        // console.log(\"___\",response)      \n        FileList[\"fileName\"] = response[\"fileName\"];\n        FileList[\"chunkList\"].push(name);\n        console.log(FileList);\n      }\n    },\n    chunking: {\n      enabled: true,\n      concurrent: {\n        enabled: true\n      },\n      success: {\n        endpoint: \"http://127.0.0.1/api/videos/processVideo\"\n      }\n    },\n    // deleteFile: {\n    //     enabled: true,\n    //     endpoint: '/api/videos/uploadChunks'\n    // },\n    debug: true,\n    request: {\n      endpoint: `http://127.0.0.1/api/videos/uploadChunks?name=${new Date().getTime()}`\n    },\n    retry: {\n      enableAuto: true\n    }\n  }\n});\nconst statusTextOverride = {\n  upload_successful: 'Success!'\n};\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Gallery, {\n      \"status-text\": {\n        text: statusTextOverride\n      },\n      uploader: uploader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/react/react/src/App.js"],"names":["React","Component","FineUploaderTraditional","Gallery","FileList","fileName","chunkList","uploader","options","callbacks","onAllComplete","id","name","response","onComplete","onUploadChunkSuccess","push","console","log","chunking","enabled","concurrent","success","endpoint","debug","request","Date","getTime","retry","enableAuto","statusTextOverride","upload_successful","App","render","text"],"mappings":";;AAAG,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACH,OAAOC,uBAAP,MAAoC,wBAApC;AACA,OAAOC,OAAP,MAAoB,qBAApB,C,CAEA;;AACA,OAAO,yCAAP;AAGA,MAAMC,QAAQ,GAAC;AACXC,EAAAA,QAAQ,EAAC,EADE;AAEXC,EAAAA,SAAS,EAAC;AAFC,CAAf;AAMA,MAAMC,QAAQ,GAAG,IAAIL,uBAAJ,CAA4B;AAGzCM,EAAAA,OAAO,EAAE;AAELC,IAAAA,SAAS,EAAE;AACPC,MAAAA,aAAa,EAAE,UAASC,EAAT,EAAYC,IAAZ,EAAiBC,QAAjB,EAA2B,CACtC;AACA;AACA;AACH,OALM;AAMPC,MAAAA,UAAU,EAAE,UAASH,EAAT,EAAYC,IAAZ,EAAiBC,QAAjB,EAA2B,CACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,OAfM;AAgBPE,MAAAA,oBAAoB,EAAC,UAASJ,EAAT,EAAYC,IAAZ,EAAiBC,QAAjB,EAA2B;AAC5C;AACA;AACA;AACDT,QAAAA,QAAQ,CAAC,UAAD,CAAR,GAAqBS,QAAQ,CAAC,UAAD,CAA7B;AACAT,QAAAA,QAAQ,CAAC,WAAD,CAAR,CAAsBY,IAAtB,CAA2BJ,IAA3B;AACCK,QAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AACC;AAvBE,KAFN;AA4BLe,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EAAE,IADD;AAERC,MAAAA,UAAU,EAAE;AACRD,QAAAA,OAAO,EAAE;AADD,OAFJ;AAKRE,MAAAA,OAAO,EAAE;AACPC,QAAAA,QAAQ,EAAE;AADH;AALD,KA5BL;AAqCL;AACA;AACA;AACA;AACAC,IAAAA,KAAK,EAAE,IAzCF;AA0CLC,IAAAA,OAAO,EAAE;AAELF,MAAAA,QAAQ,EAAG,iDAAgD,IAAIG,IAAJ,GAAWC,OAAX,EAAqB;AAF3E,KA1CJ;AA+CLC,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AADT;AA/CF;AAHgC,CAA5B,CAAjB;AAuDA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,iBAAiB,EAAE;AADM,CAA3B;;AAGA,MAAMC,GAAN,SAAkB/B,SAAlB,CAA4B;AACxBgC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,OAAD;AAAS,qBAAc;AAAEC,QAAAA,IAAI,EAAEJ;AAAR,OAAvB;AAAsD,MAAA,QAAQ,EAAGvB;AAAjE;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AALuB;;AAQ5B,eAAeyB,GAAf","sourcesContent":["   import React, { Component } from 'react'\nimport FineUploaderTraditional from 'fine-uploader-wrappers'\nimport Gallery from 'react-fine-uploader'\n \n// ...or load this specific CSS file using a <link> tag in your document\nimport 'react-fine-uploader/gallery/gallery.css'\n\n\nconst FileList={\n    fileName:\"\",\n    chunkList:[]\n};\n\n\nconst uploader = new FineUploaderTraditional({\n\n    \n    options: {\n    \n        callbacks: {\n            onAllComplete: function(id,name,response) {\n                // console.log(\"allcomp\",name);\n                // console.log(\"allcomp\",id);\n                // console.log(\"allcomp\",response)\n            },\n            onComplete: function(id,name,response) {\n            //    console.log(\"comp\",name);\n            //    console.log(\"comp\",id);\n            //    console.log(\"comp\",response)\n            //    fetch(`http://127.0.0.1/api/videos/processVideo?fileName=${response['fileName']}`).then((res)=>{\n            //        console.log(\"asd\");\n            //    }).catch((err)=>{\n            //        console.log(\"ERROR\")\n            //    })\n            },\n            onUploadChunkSuccess:function(id,name,response) {\n                // console.log(\"___\",name);\n                // console.log(\"___\",id);\n                // console.log(\"___\",response)      \n               FileList[\"fileName\"]=response[\"fileName\"]\n               FileList[\"chunkList\"].push(name)\n                console.log(FileList)\n                },\n            \n        },\n        chunking: {\n          enabled: true,\n          concurrent: {\n              enabled: true\n          },\n          success: {\n            endpoint: \"http://127.0.0.1/api/videos/processVideo\"\n        }\n        },\n        // deleteFile: {\n        //     enabled: true,\n        //     endpoint: '/api/videos/uploadChunks'\n        // },\n        debug: true,\n        request: {\n            \n            endpoint: `http://127.0.0.1/api/videos/uploadChunks?name=${new Date().getTime()}`,\n          \n        },\n        retry: {\n            enableAuto: true\n        }\n    }\n})\nconst statusTextOverride = {\n  upload_successful: 'Success!'\n}\nclass App extends Component {\n    render() {\n        return (\n            <Gallery status-text={ { text: statusTextOverride } } uploader={ uploader } />\n        )\n    }\n}\n \nexport default App"]},"metadata":{},"sourceType":"module"}