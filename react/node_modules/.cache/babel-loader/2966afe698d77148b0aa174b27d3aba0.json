{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/maliksblr92/Desktop/development/clipbucket/react/src/App.js\";\nimport React, { Component } from 'react';\nimport FineUploaderTraditional from 'fine-uploader-wrappers';\nimport Gallery from 'react-fine-uploader'; // ...or load this specific CSS file using a <link> tag in your document\n\nimport 'react-fine-uploader/gallery/gallery.css';\nconst uploader = new FineUploaderTraditional({\n  options: {\n    chunking: {\n      enabled: true,\n      concurrent: {\n        enabled: true\n      } //   success: {\n      //     endpoint: \"http://127.0.0.1:8000/api/videos/processVideo\"\n      // }\n\n    },\n    // deleteFile: {\n    //     enabled: true,\n    //     endpoint: '/api/videos/uploadChunks'\n    // },\n    debug: true,\n    request: {\n      method: \"post\",\n      // headers: {\n      //     'Content-Type': 'application/json',\n      //     'Accept': 'application/json',\n      // },\n      endpoint: 'http://127.0.0.1:8000/api/videos/processVideo'\n    },\n    retry: {\n      enableAuto: true\n    }\n  }\n});\nconst statusTextOverride = {\n  upload_successful: 'Success!'\n};\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Gallery, {\n      \"status-text\": {\n        text: statusTextOverride\n      },\n      uploader: uploader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/maliksblr92/Desktop/development/clipbucket/react/src/App.js"],"names":["React","Component","FineUploaderTraditional","Gallery","uploader","options","chunking","enabled","concurrent","debug","request","method","endpoint","retry","enableAuto","statusTextOverride","upload_successful","App","render","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,uBAAP,MAAoC,wBAApC;AACA,OAAOC,OAAP,MAAoB,qBAApB,C,CAEA;;AACA,OAAO,yCAAP;AAEA,MAAMC,QAAQ,GAAG,IAAIF,uBAAJ,CAA4B;AACzCG,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EAAE,IADD;AAERC,MAAAA,UAAU,EAAE;AACRD,QAAAA,OAAO,EAAE;AADD,OAFJ,CAKV;AACA;AACA;;AAPU,KADL;AAUL;AACA;AACA;AACA;AACAE,IAAAA,KAAK,EAAE,IAdF;AAeLC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,MADH;AAEL;AACA;AACA;AAEA;AACAC,MAAAA,QAAQ,EAAE;AAPL,KAfJ;AAwBLC,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AADT;AAxBF;AADgC,CAA5B,CAAjB;AA8BA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,iBAAiB,EAAE;AADM,CAA3B;;AAGA,MAAMC,GAAN,SAAkBhB,SAAlB,CAA4B;AACxBiB,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,OAAD;AAAS,qBAAc;AAAEC,QAAAA,IAAI,EAAEJ;AAAR,OAAvB;AAAsD,MAAA,QAAQ,EAAGX;AAAjE;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AALuB;;AAQ5B,eAAea,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport FineUploaderTraditional from 'fine-uploader-wrappers'\nimport Gallery from 'react-fine-uploader'\n \n// ...or load this specific CSS file using a <link> tag in your document\nimport 'react-fine-uploader/gallery/gallery.css'\n \nconst uploader = new FineUploaderTraditional({\n    options: {\n        chunking: {\n          enabled: true,\n          concurrent: {\n              enabled: true\n          },\n        //   success: {\n        //     endpoint: \"http://127.0.0.1:8000/api/videos/processVideo\"\n        // }\n        },\n        // deleteFile: {\n        //     enabled: true,\n        //     endpoint: '/api/videos/uploadChunks'\n        // },\n        debug: true,\n        request: {\n            method: \"post\",\n            // headers: {\n            //     'Content-Type': 'application/json',\n            //     'Accept': 'application/json',\n               \n            // },\n            endpoint: 'http://127.0.0.1:8000/api/videos/processVideo'\n        },\n        retry: {\n            enableAuto: true\n        }\n    }\n})\nconst statusTextOverride = {\n  upload_successful: 'Success!'\n}\nclass App extends Component {\n    render() {\n        return (\n            <Gallery status-text={ { text: statusTextOverride } } uploader={ uploader } />\n        )\n    }\n}\n \nexport default App"]},"metadata":{},"sourceType":"module"}