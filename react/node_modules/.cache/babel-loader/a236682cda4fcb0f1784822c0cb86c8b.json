{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/react/react/src/App.js\";\nimport React, { Component } from 'react';\nimport FineUploaderTraditional from 'fine-uploader-wrappers';\nimport Gallery from 'react-fine-uploader'; // ...or load this specific CSS file using a <link> tag in your document\n\nimport 'react-fine-uploader/gallery/gallery.css';\nconst FileList = [];\nconst uploader = new FineUploaderTraditional({\n  options: {\n    callbacks: {\n      onAllComplete: function (data) {// console.log(data)\n      },\n      onComplete: function (data) {//    console.log(data)\n      },\n      onUpload: function (e) {// console.log(e['name'])\n      },\n      onValidate: function (e) {\n        console.log(e);\n        let filename = e['name'];\n        let data = {\n          filename: e['name'],\n          size: e['size'],\n          randomName: new Date().getTime()\n        };\n        FileList.push(data);\n      }\n    },\n    chunking: {\n      enabled: true,\n      concurrent: {\n        enabled: true\n      },\n      success: {\n        endpoint: \"http://127.0.0.1/api/videos/processVideo\"\n      }\n    },\n    // deleteFile: {\n    //     enabled: true,\n    //     endpoint: '/api/videos/uploadChunks'\n    // },\n    debug: true,\n    request: {\n      endpoint: `http://127.0.0.1/api/videos/uploadChunks?name=${new Date().getTime()}`\n    },\n    retry: {\n      enableAuto: true\n    }\n  }\n});\nconst statusTextOverride = {\n  upload_successful: 'Success!'\n};\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Gallery, {\n      \"status-text\": {\n        text: statusTextOverride\n      },\n      uploader: uploader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/react/react/src/App.js"],"names":["React","Component","FineUploaderTraditional","Gallery","FileList","uploader","options","callbacks","onAllComplete","data","onComplete","onUpload","e","onValidate","console","log","filename","size","randomName","Date","getTime","push","chunking","enabled","concurrent","success","endpoint","debug","request","retry","enableAuto","statusTextOverride","upload_successful","App","render","text"],"mappings":";;AAAG,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACH,OAAOC,uBAAP,MAAoC,wBAApC;AACA,OAAOC,OAAP,MAAoB,qBAApB,C,CAEA;;AACA,OAAO,yCAAP;AAGA,MAAMC,QAAQ,GAAC,EAAf;AAGA,MAAMC,QAAQ,GAAG,IAAIH,uBAAJ,CAA4B;AAGzCI,EAAAA,OAAO,EAAE;AAELC,IAAAA,SAAS,EAAE;AACPC,MAAAA,aAAa,EAAE,UAASC,IAAT,EAAe,CAC/B;AACE,OAHM;AAIPC,MAAAA,UAAU,EAAE,UAASD,IAAT,EAAe,CAC3B;AACK,OANE;AAOPE,MAAAA,QAAQ,EAAC,UAASC,CAAT,EAAW,CACjB;AACE,OATE;AAUHC,MAAAA,UAAU,EAAC,UAASD,CAAT,EAAW;AAClBE,QAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACA,YAAII,QAAQ,GAACJ,CAAC,CAAC,MAAD,CAAd;AACA,YAAIH,IAAI,GAAC;AACLO,UAAAA,QAAQ,EAACJ,CAAC,CAAC,MAAD,CADL;AAEJK,UAAAA,IAAI,EAACL,CAAC,CAAC,MAAD,CAFF;AAGJM,UAAAA,UAAU,EAAC,IAAIC,IAAJ,GAAWC,OAAX;AAHP,SAAT;AAKAhB,QAAAA,QAAQ,CAACiB,IAAT,CAAcZ,IAAd;AAIC;AAtBF,KAFN;AA2BLa,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EAAE,IADD;AAERC,MAAAA,UAAU,EAAE;AACRD,QAAAA,OAAO,EAAE;AADD,OAFJ;AAKRE,MAAAA,OAAO,EAAE;AACPC,QAAAA,QAAQ,EAAE;AADH;AALD,KA3BL;AAoCL;AACA;AACA;AACA;AACAC,IAAAA,KAAK,EAAE,IAxCF;AAyCLC,IAAAA,OAAO,EAAE;AAELF,MAAAA,QAAQ,EAAG,iDAAgD,IAAIP,IAAJ,GAAWC,OAAX,EAAqB;AAF3E,KAzCJ;AA8CLS,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AADT;AA9CF;AAHgC,CAA5B,CAAjB;AAsDA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,iBAAiB,EAAE;AADM,CAA3B;;AAGA,MAAMC,GAAN,SAAkBhC,SAAlB,CAA4B;AACxBiC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,OAAD;AAAS,qBAAc;AAAEC,QAAAA,IAAI,EAAEJ;AAAR,OAAvB;AAAsD,MAAA,QAAQ,EAAG1B;AAAjE;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AALuB;;AAQ5B,eAAe4B,GAAf","sourcesContent":["   import React, { Component } from 'react'\nimport FineUploaderTraditional from 'fine-uploader-wrappers'\nimport Gallery from 'react-fine-uploader'\n \n// ...or load this specific CSS file using a <link> tag in your document\nimport 'react-fine-uploader/gallery/gallery.css'\n\n\nconst FileList=[];\n\n\nconst uploader = new FineUploaderTraditional({\n\n    \n    options: {\n    \n        callbacks: {\n            onAllComplete: function(data) {\n           // console.log(data)\n            },\n            onComplete: function(data) {\n            //    console.log(data)\n                },\n            onUpload:function(e){\n               // console.log(e['name'])\n                },\n                onValidate:function(e){\n                    console.log(e)\n                    let filename=e['name']\n                    let data={\n                        filename:e['name'],\n                         size:e['size'],\n                         randomName:new Date().getTime(),\n                    }\n                    FileList.push(data);\n\n\n\n                    },\n           \n        },\n        chunking: {\n          enabled: true,\n          concurrent: {\n              enabled: true\n          },\n          success: {\n            endpoint: \"http://127.0.0.1/api/videos/processVideo\"\n        }\n        },\n        // deleteFile: {\n        //     enabled: true,\n        //     endpoint: '/api/videos/uploadChunks'\n        // },\n        debug: true,\n        request: {\n            \n            endpoint: `http://127.0.0.1/api/videos/uploadChunks?name=${new Date().getTime()}`,\n          \n        },\n        retry: {\n            enableAuto: true\n        }\n    }\n})\nconst statusTextOverride = {\n  upload_successful: 'Success!'\n}\nclass App extends Component {\n    render() {\n        return (\n            <Gallery status-text={ { text: statusTextOverride } } uploader={ uploader } />\n        )\n    }\n}\n \nexport default App"]},"metadata":{},"sourceType":"module"}